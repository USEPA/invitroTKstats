#-------------------------------------  -----------------------------------------
# Name:       PPB-model.bug
# Description: A JAGS model for drawing inference of chemical-specific 
#              paramters from an in vitro assay
#
# Author:      John Wambaugh
#------------------------------------------------------------------------------
                                                   
model {

# Measurement Model:
  log.const.analytic.sd ~ dnorm(-2,0.1)
  const.analytic.sd <- 10^log.const.analytic.sd
  log.hetero.analytic.slope.factor ~ dnorm(1,.1)
  hetero.analytic.slope.factor <- 10^log.hetero.analytic.slope.factor
  hetero.analytic.slope <- hetero.analytic.slope.factor*const.analytic.sd
  background ~ dunif(0,1000)   
  log.calibration ~ dnorm(0,.1)
  calibration <- 10^log.calibration
# Concentrations below this value are not detectable:
  log.C.thresh ~ dnorm(log(C.frank/2),0.25)T(log(C.frank/1000),log(10*C.frank))
  C.thresh <- exp(log.C.thresh)
  Blank.pred <- background  
  Blank.prec <-  (const.analytic.sd+hetero.analytic.slope*(Blank.pred))^(-2)
  for (i in 1:Num.Blank.obs) {
    Blank.data[i] ~ dnorm(Blank.pred,Blank.prec)
  }
  T0.pred <- calibration*(C.frank/5-C.thresh) + background
  T0.prec <- (const.analytic.sd+hetero.analytic.slope*(T0.pred))^(-2)
  for (i in 1:Num.T0.obs) {
# Must include the dilution factor (5 for Plasma)
    T0.data[i] ~ dnorm(T0.pred,T0.prec) 
  }
# Must include the dilution factor (2 for PBS)
  PBS.pred <- calibration*(C.u[1]/2 - C.thresh)*step(C.u[1]/2 - C.thresh) + background
  PBS.prec <- (const.analytic.sd+hetero.analytic.slope*(PBS.pred))^(-2)
  for (i in 1:Num.PBS.obs) {
      PBS.data[i] ~dnorm(PBS.pred,PBS.prec)
  }
# Must include the dilution factor (5 for Plasma)
  Plasma.pred <- calibration*(C.upb[1]/5 - C.thresh)*step(C.upb[1]/5 - C.thresh) + background
  Plasma.prec <- (const.analytic.sd+hetero.analytic.slope*(Plasma.pred))^(-2)
  for (i in 1:Num.Plasma.obs) {
      Plasma.data[i] ~dnorm(Plasma.pred,Plasma.prec)
  }
  
# Binding Model:
  log.Fup ~ dunif(-10,0)
  Fup <- 10^log.Fup
#  for (i in 1:3) {
# Missing (bound to walls/membrane) chemical:
  C.missing[1] ~ dunif(0,C.frank)
# Unbound concentration in both wells:
  C.u[1] <- Fup/(Fup+1)*(C.frank-C.missing)
# Bound concentration in plasma well:
  C.b[1] <- (1-Fup)/Fup*C.u[1]
# Toal concentration in plasma well:
  C.upb[1] <- C.b[1] + C.u[1] 
  
}